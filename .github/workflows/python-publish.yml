name: Python publish

on:
  workflow_call:

    secrets:
      ARBITRUM_PROVIDER_URL:
        required: true
      PYPI_USERNAME:
        required: false
      PYPI_PASSWORD:
        required: false
      PYPI_TOKEN:
        required: false

    inputs:
      python-version:
        description: "Python version"
        type: string
        default: 3.12
        required: false
      poetry-version:
        description: "Poetry version"
        type: string
        default: 1.8
        required: false
      test-options:
        description: "Extra pytest options"
        type: string
        default: "-v -s"
        required: false
      format-code-enabled:
        description: "Enable code formatting"
        type: boolean
        default: true
        required: false
      static-code-analysis-enabled:
        description: "Enable static code analysis"
        type: boolean
        default: true
        required: false
      build-enabled:
        description: "Enable package build"
        type: boolean
        default: true
        required: false
      test-enabled:
        description: "Enable pytest tests"
        type: boolean
        default: true
        required: false
      publish-enabled:
        description: "Enable package publishing"
        type: boolean
        default: false
        required: false

env:
  POETRY_VIRTUALENVS_PATH: "~/.cache/pypoetry/virtualenvs"

jobs:
  python:
    runs-on: ubuntu-latest
    environment:
      name: release
      url: https://pypi.org/p/ipor-fusion
    permissions:
      #actions: none
      attestations: write
      checks: read
      contents: write
      deployments: write
      id-token: write
      #issues: none
      #discussions: none
      packages: write
      #pages: none
      #pull-requests: none
      #repository-projects: none
      #security-events: none
      statuses: read

    steps:
      - name: Checkout
        # from tag: v4.2.2
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          submodules: recursive

      - name: Set up Python
        # from tag: v5.3.0
        uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b
        with:
          python-version: ${{ inputs.python-version }}

      - name: Set up Poetry
        # from tag: v3.0.1
        uses: abatilo/actions-poetry@e78f54a89cb052fff327414dd9ff010b5d2b4dbd
        with:
          poetry-version: ${{ inputs.poetry-version }}

      - name: Cache
        # from tag: v4.1.2
        uses: actions/cache@6849a6489940f00c2f30c0fb92c6274307ccb58a
        with:
          path: ${{ env.POETRY_VIRTUALENVS_PATH }}
          key: ${{ runner.os }}-poetry-${{ hashFiles('poetry.lock') }}

      - name: Install
        run: poetry install
        id: install

      - name: Build
        if: inputs.build-enabled
        run: poetry build
        id: build

      - name: Tests
        if: inputs.test-enabled
        run: |
          poetry run pytest ${{ inputs.test-options }}
        env:
          ARBITRUM_PROVIDER_URL: ${{ secrets.ARBITRUM_PROVIDER_URL }}
        id: tests

      - name: Format code
        if: inputs.format-code-enabled
        run: poetry run black --check ./
        id: format-code

      - name: Static code analysis
        if: inputs.static-code-analysis-enabled
        run: poetry run pylint --rcfile=pylintrc.toml --verbose --recursive=y .
        id: static-code-analyze

      - name: Publish
        if: inputs.publish-enabled
        # from tag: v1.10.3
        uses: pypa/gh-action-pypi-publish@f7600683efdcb7656dec5b29656edb7bc586e597
        with:
          print-hash: true
          verify-metadata: true
        id: publish
